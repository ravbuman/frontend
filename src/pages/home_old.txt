import React, { useState, useEffect, useRef } from 'react';
import { Link, useNavigate } from 'react-router-dom';
import { motion, useScroll, useTransform, useMotionValue, useSpring } from 'framer-motion';
import { FiShoppingBag, FiStar, FiTrendingUp, FiArrowRight, FiHeart, FiShoppingCart, FiEye, FiUsers, FiAward, FiTruck, FiPackage } from 'react-icons/fi';
import toast from 'react-hot-toast';
import ComboPackCard from '../components/ComboPackCard';

// ProductCard component moved outside to prevent hooks order issues
const ProductCard = ({ product, index, onAddToWishlist, onAddToCart, isInWishlist, navigate }) => {
  const productIsWishlisted = isInWishlist(product._id);
  
  return (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      animate={{ opacity: 1, y: 0 }}
      transition={{ delay: index * 0.1 }}
      className="bg-white rounded-3xl p-6 shadow-[8px_8px_16px_#e8eae8,-8px_-8px_16px_#ffffff] hover:shadow-[12px_12px_24px_#e8eae8,-12px_-12px_24px_#ffffff] transition-all duration-300 group relative"
    >
      {/* Wishlist indicator - always visible if wishlisted */}
      {productIsWishlisted && (
        <div className="absolute top-3 left-3 z-10">
          <div className="p-2 bg-red-500 text-white rounded-xl shadow-lg">
            <FiHeart className="w-4 h-4 fill-current" />
          </div>
        </div>
      )}
      
      <div className="relative mb-4">
        <div className="w-full h-48 bg-[#f8faf8] rounded-2xl shadow-inner overflow-hidden">
          <img
            src={product.images?.[0] || product.image || '/placeholder.png'}
            alt={product.name}
            className="w-full h-full object-cover group-hover:scale-105 transition-transform duration-300"
          />
        </div>
        <div className="absolute top-3 right-3 flex gap-2 opacity-0 group-hover:opacity-100 transition-opacity">
          <button
            onClick={() => onAddToWishlist(product._id)}
            className={`p-2 rounded-xl shadow-[4px_4px_8px_#e8eae8,-4px_-4px_8px_#ffffff] transition-all ${
              productIsWishlisted 
                ? 'bg-red-500 text-white hover:bg-red-600' 
                : 'bg-white hover:bg-red-50 hover:text-red-500'
            }`}
          >
            <FiHeart className={`w-4 h-4 ${productIsWishlisted ? 'fill-current' : ''}`} />
          </button>
          <button
            onClick={() => navigate(`/products/${product._id}`)}
            className="p-2 bg-white rounded-xl shadow-[4px_4px_8px_#e8eae8,-4px_-4px_8px_#ffffff] hover:bg-blue-50 hover:text-blue-500 transition-all"
          >
            <FiEye className="w-4 h-4" />
          </button>
        </div>
      </div>
      
      <div className="space-y-3">
        <h3 className="font-semibold text-gray-800 line-clamp-2 group-hover:text-[#2ecc71] transition-colors">
          {product.name}
        </h3>
        
        <div className="flex items-center justify-between">
          <span className="text-[#2ecc71] font-bold text-lg">â‚¹{product.price.toLocaleString()}</span>
          <div className="flex items-center gap-1">
            <FiStar className="w-4 h-4 text-yellow-400 fill-current" />
            <span className="text-sm text-gray-600">4.5</span>
          </div>
        </div>
        
        <button
          onClick={() => onAddToCart(product._id)}
          className="w-full py-3 bg-[#2ecc71] text-white rounded-xl font-medium shadow-[0_4px_12px_rgba(46,204,113,0.2)] hover:shadow-[0_6px_16px_rgba(46,204,113,0.3)] hover:bg-[#27ae60] transition-all flex items-center justify-center gap-2"
        >
          <FiShoppingCart className="w-4 h-4" />
          Add to Cart
        </button>
      </div>
    </motion.div>
  );
};

const Home = () => {
  // All useState hooks first
  const [products, setProducts] = useState([]);
  const [loading, setLoading] = useState(true);
  const [featuredProducts, setFeaturedProducts] = useState([]);
  const [comboPacks, setComboPacks] = useState([]);
  const [newArrivals, setNewArrivals] = useState([]);
  const [topRated, setTopRated] = useState([]);
  const [wishlistItems, setWishlistItems] = useState([]);
  const [isAuthenticated, setIsAuthenticated] = useState(false);
  const [currentSlide, setCurrentSlide] = useState(0);
  
  // All useRef hooks
  const navigate = useNavigate();
  const carouselRef = useRef(null);
  const containerRef = useRef(null);
  
  // All motion values and framer-motion hooks
  const mouseX = useMotionValue(0);
  const mouseY = useMotionValue(0);
  const springX = useSpring(mouseX, { stiffness: 300, damping: 30 });
  const springY = useSpring(mouseY, { stiffness: 300, damping: 30 });
  
  // Scroll animations - MUST be after containerRef is defined
  const { scrollYProgress } = useScroll({ target: containerRef });
  const backgroundY = useTransform(scrollYProgress, [0, 1], ['0%', '100%']);
  const backgroundRotate = useTransform(scrollYProgress, [0, 1], [0, 360]);
  const backgroundScale = useTransform(scrollYProgress, [0, 0.5, 1], [1, 1.2, 1]);
    // Handle mouse movement for interactive animations
  const handleMouseMove = (e) => {
    const rect = containerRef.current?.getBoundingClientRect();
    if (rect) {
      const x = (e.clientX - rect.left) / rect.width;
      const y = (e.clientY - rect.top) / rect.height;
      mouseX.set(x);
      mouseY.set(y);
    }
  };

  // All useEffect hooks
  useEffect(() => {
    const token = localStorage.getItem('token');
    setIsAuthenticated(!!token);
    fetchProducts();
    fetchComboPacks();
    if (token) {
      fetchWishlist();
    }
  }, []);

  // Auto-scroll for featured products carousel
  useEffect(() => {
    if (featuredProducts.length > 0) {
      const interval = setInterval(() => {
        setCurrentSlide((prev) => {
          const nextSlide = (prev + 1) % Math.min(5, featuredProducts.length);
          
          // Smooth scroll to the next product
          if (carouselRef.current) {
            const cardWidth = 300 + 24; // card width + gap
            carouselRef.current.scrollTo({
              left: nextSlide * cardWidth,
              behavior: 'smooth'
            });
          }
          
          return nextSlide;
        });
      }, 4000); // Auto-scroll every 4 seconds

      return () => clearInterval(interval);
    }  }, [featuredProducts]);

  const fetchProducts = async () => {
    try {
      const response = await fetch('https://coms-again.onrender.com/api/products');
      const data = await response.json();
      
      if (data.products) {
        setProducts(data.products);
        
        // Simulate categories by sorting and filtering
        const shuffled = [...data.products].sort(() => 0.5 - Math.random());
        setFeaturedProducts(shuffled.slice(0, 6));
        setNewArrivals(shuffled.slice(6, 12));
        setTopRated(shuffled.slice(12, 18));
      }
    } catch (error) {
      console.error('Error fetching products:', error);
      toast.error('Failed to load products');
    } finally {
      setLoading(false);
    }
  };

  const fetchWishlist = async () => {
    try {
      const token = localStorage.getItem('token');
      if (!token) return;

      const response = await fetch('https://coms-again.onrender.com/api/products/wishlist/me', {
        headers: {
          'Authorization': `Bearer ${token}`
        }
      });      if (response.ok) {
        const data = await response.json();
        setWishlistItems(data.wishlist || []);
      }
    } catch (error) {
      console.error('Error fetching wishlist:', error);
    }
  };

  const fetchComboPacks = async () => {
    try {
      const response = await fetch('https://coms-again.onrender.com/api/combo-packs/featured?limit=5');
      const data = await response.json();
      
      if (data.success && data.comboPacks) {
        setComboPacks(data.comboPacks);
      }
    } catch (error) {
      console.error('Error fetching combo packs:', error);
      // Don't show error toast for combo packs as they're optional
    }
  };

  const isInWishlist = (productId) => {
    return wishlistItems.some(item => item._id === productId);
  };
  const addToWishlist = async (productId) => {
    const token = localStorage.getItem('token');
    if (!token) {
      toast.error('Please login to add to wishlist');
      return;
    }

    try {
      const isWishlisted = isInWishlist(productId);
      const endpoint = isWishlisted 
        ? 'https://coms-again.onrender.com/api/products/wishlist/remove'
        : 'https://coms-again.onrender.com/api/products/wishlist/add';

      const response = await fetch(endpoint, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify({ productId })
      });

      if (response.ok) {
        toast.success(isWishlisted ? 'Removed from wishlist' : 'Added to wishlist!');
        // Refresh wishlist
        fetchWishlist();
      } else {
        throw new Error('Failed to update wishlist');
      }
    } catch (error) {
      toast.error('Error updating wishlist');
    }
  };

  const addToCart = async (productId) => {
    const token = localStorage.getItem('token');
    if (!token) {
      toast.error('Please login to add to cart');
      return;
    }

    try {
      const response = await fetch('https://coms-again.onrender.com/api/products/cart/add', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'Authorization': `Bearer ${token}`
        },
        body: JSON.stringify({ productId, qty: 1 })
      });

      if (response.ok) {
        toast.success('Added to cart!');
      } else {
        throw new Error('Failed to add to cart');
      }    } catch (error) {
      toast.error('Error adding to cart');
    }
  };

  const SectionHeader = ({ title, subtitle, icon: Icon }) => (
    <motion.div
      initial={{ opacity: 0, y: 20 }}
      whileInView={{ opacity: 1, y: 0 }}
      viewport={{ once: true }}
      className="text-center mb-12"
    >
      <div className="flex items-center justify-center gap-3 mb-4">
        <Icon className="w-8 h-8 text-[#2ecc71]" />
        <h2 className="text-3xl font-bold text-gray-800">{title}</h2>
      </div>
      <p className="text-gray-600 max-w-2xl mx-auto">{subtitle}</p>
    </motion.div>
  );
  return (
    <motion.div 
      ref={containerRef}
      className="min-h-screen bg-[#f8faf8] relative overflow-hidden"
      onMouseMove={handleMouseMove}
    >
      {/* Animated Background Elements */}
      <div className="fixed inset-0 pointer-events-none">
        {/* Floating Orbs */}
        <motion.div
          className="absolute w-96 h-96 rounded-full bg-gradient-to-r from-[#2ecc71]/10 to-[#27ae60]/5 blur-3xl"
          style={{
            x: useTransform(springX, [0, 1], [-100, 100]),
            y: useTransform(springY, [0, 1], [-100, 100]),
            scale: backgroundScale,
            rotate: backgroundRotate,
          }}
          animate={{
            x: [0, 100, 0],
            y: [0, -100, 0],
          }}
          transition={{
            duration: 20,
            repeat: Infinity,
            ease: "easeInOut"
          }}
        />
        
        <motion.div
          className="absolute right-0 top-1/4 w-64 h-64 rounded-full bg-gradient-to-l from-[#27ae60]/10 to-[#2ecc71]/5 blur-2xl"
          style={{
            x: useTransform(springX, [0, 1], [50, -50]),
            y: useTransform(springY, [0, 1], [50, -50]),
          }}
          animate={{
            scale: [1, 1.2, 1],
            rotate: [0, 180, 360],
          }}
          transition={{
            duration: 15,
            repeat: Infinity,
            ease: "easeInOut"
          }}
        />
        
        <motion.div
          className="absolute bottom-1/4 left-1/4 w-48 h-48 rounded-full bg-gradient-to-br from-[#2ecc71]/15 to-transparent blur-xl"
          style={{
            y: backgroundY,
            scale: useTransform(scrollYProgress, [0, 1], [0.8, 1.2]),
          }}
          animate={{
            x: [0, -50, 0],
            y: [0, 50, 0],
          }}
          transition={{
            duration: 12,
            repeat: Infinity,
            ease: "easeInOut"
          }}
        />
        
        {/* Scroll Progress Indicator */}
        <motion.div
          className="fixed top-0 left-0 right-0 h-1 bg-gradient-to-r from-[#2ecc71] to-[#27ae60] origin-left z-50"
          style={{ scaleX: scrollYProgress }}
        />
        
        {/* Floating Particles */}
        {[...Array(15)].map((_, i) => (
          <motion.div
            key={i}
            className="absolute w-2 h-2 bg-[#2ecc71]/20 rounded-full"
            style={{
              left: `${Math.random() * 100}%`,
              top: `${Math.random() * 100}%`,
            }}
            animate={{
              y: [0, -100, 0],
              opacity: [0, 1, 0],
              scale: [0, 1, 0],
            }}
            transition={{
              duration: 3 + Math.random() * 2,
              repeat: Infinity,
              delay: Math.random() * 2,
              ease: "easeInOut"
            }}
          />
        ))}
      </div>      {/* Hero Section */}
      <motion.section 
        className="relative overflow-hidden py-20 px-4"
        style={{
          y: useTransform(scrollYProgress, [0, 0.2], [0, -50]),
        }}
      >
        <motion.div 
          className="absolute inset-0 bg-gradient-to-br from-[#2ecc71]/5 to-[#27ae60]/5"
          style={{
            scale: useTransform(scrollYProgress, [0, 0.2], [1, 1.1]),
            rotate: useTransform(scrollYProgress, [0, 0.2], [0, 2]),
          }}
        />
        
        {/* Interactive mouse follower */}
        <motion.div
          className="absolute inset-0 pointer-events-none"
          style={{
            background: `radial-gradient(600px circle at ${useTransform(springX, [0, 1], [0, 100])}% ${useTransform(springY, [0, 1], [0, 100])}%, rgba(46, 204, 113, 0.1), transparent 40%)`,
          }}
        />
        
        <div className="max-w-7xl mx-auto relative">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            animate={{ opacity: 1, y: 0 }}
            transition={{ duration: 0.8 }}
            className="text-center"
          >
            <h1 className="text-5xl md:text-7xl font-bold text-gray-800 mb-6">
              Welcome to <span className="text-[#2ecc71]">EcoShop</span>
            </h1>
            <p className="text-xl text-gray-600 mb-8 max-w-3xl mx-auto">
              Discover amazing products with unbeatable quality and prices. Your shopping journey starts here.
            </p>
            <div className="flex flex-col sm:flex-row gap-4 justify-center">
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                onClick={() => navigate('/products')}
                className="px-8 py-4 bg-[#2ecc71] text-white rounded-2xl font-semibold shadow-[0_8px_24px_rgba(46,204,113,0.2)] hover:shadow-[0_12px_32px_rgba(46,204,113,0.3)] transition-all flex items-center justify-center gap-2"
              >
                <FiShoppingBag className="w-5 h-5" />
                Shop Now
                <FiArrowRight className="w-5 h-5" />
              </motion.button>
              <motion.button
                whileHover={{ scale: 1.05 }}
                whileTap={{ scale: 0.95 }}
                className="px-8 py-4 bg-white text-gray-700 rounded-2xl font-semibold shadow-[8px_8px_16px_#e8eae8,-8px_-8px_16px_#ffffff] hover:shadow-[12px_12px_24px_#e8eae8,-12px_-12px_24px_#ffffff] transition-all"
              >
                Learn More
              </motion.button>            </div>
          </motion.div>
        </div>
      </motion.section>

      {/* Stats Section */}
      <motion.section 
        className="py-16 px-4"
        style={{
          y: useTransform(scrollYProgress, [0.1, 0.3], [0, -30]),
        }}
      >        <div className="max-w-7xl mx-auto">
          <div className="grid grid-cols-2 lg:grid-cols-4 gap-4 lg:gap-8">
            {[
              { icon: FiUsers, number: '10K+', label: 'Happy Customers' },
              { icon: FiShoppingBag, number: '50K+', label: 'Products Sold' },
              { icon: FiAward, number: '99%', label: 'Satisfaction Rate' },
              { icon: FiTruck, number: '24/7', label: 'Fast Delivery' }
            ].map((stat, index) => (
              <motion.div
                key={index}
                initial={{ opacity: 0, y: 20 }}
                whileInView={{ opacity: 1, y: 0 }}
                viewport={{ once: true }}
                transition={{ delay: index * 0.1 }}
                className="text-center bg-white rounded-2xl lg:rounded-3xl p-4 lg:p-6 shadow-[8px_8px_16px_#e8eae8,-8px_-8px_16px_#ffffff]"
              >
                <stat.icon className="w-6 h-6 lg:w-8 lg:h-8 text-[#2ecc71] mx-auto mb-2 lg:mb-3" />
                <div className="text-lg lg:text-2xl font-bold text-gray-800 mb-1">{stat.number}</div>
                <div className="text-gray-600 text-xs lg:text-sm">{stat.label}</div>
              </motion.div>
            ))}
          </div>
        </div>
      </motion.section>

      {/* Featured Combo Packs */}
      {comboPacks.length > 0 && (
        <motion.section 
          className="py-16 px-4 bg-gradient-to-br from-purple-50 via-white to-pink-50"
          style={{
            y: useTransform(scrollYProgress, [0.15, 0.35], [0, -20]),
          }}
        >
          <div className="max-w-7xl mx-auto">
            <SectionHeader
              title="Combo Deals"
              subtitle="Get more value with our carefully curated combo packs"
              icon={FiPackage}
            />
            
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-5 gap-6">
              {comboPacks.map((comboPack, index) => (
                <ComboPackCard
                  key={comboPack._id}
                  comboPack={comboPack}
                  index={index}
                />
              ))}
            </div>
          </div>
        </motion.section>
      )}

      {/* Featured Products */}
      <motion.section 
        className="py-16 px-4"
        style={{
          y: useTransform(scrollYProgress, [0.2, 0.4], [0, -20]),
        }}
      >
        <div className="max-w-7xl mx-auto">
          <SectionHeader
            title="Featured Products"
            subtitle="Handpicked products that our customers love the most"
            icon={FiStar}
          />
          
          {loading ? (
            <div className="relative overflow-hidden">
              <div className="flex gap-6 overflow-x-auto scrollbar-hide pb-4">
                {[...Array(5)].map((_, i) => (
                  <motion.div 
                    key={i} 
                    initial={{ opacity: 0, x: 50 }}
                    animate={{ opacity: 1, x: 0 }}
                    transition={{ delay: i * 0.1, duration: 0.5 }}
                    className="min-w-[300px] bg-white rounded-3xl p-6 shadow-[8px_8px_16px_#e8eae8,-8px_-8px_16px_#ffffff] animate-pulse"
                  >
                    <div className="w-full h-48 bg-[#f8faf8] rounded-2xl mb-4 shadow-inner"></div>
                    <div className="space-y-3">
                      <div className="h-4 bg-[#f8faf8] rounded-xl w-3/4 shadow-inner"></div>
                      <div className="h-4 bg-[#f8faf8] rounded-xl w-1/2 shadow-inner"></div>
                      <div className="h-10 bg-[#f8faf8] rounded-xl shadow-inner"></div>
                    </div>
                  </motion.div>
                ))}
              </div>
            </div>
          ) : featuredProducts.length > 0 ? (
            <div className="relative">              {/* Carousel Container */}
              <div className="overflow-hidden rounded-3xl bg-gradient-to-r from-[#f8faf8]/50 to-white/30 p-6 shadow-[inset_8px_8px_16px_#e8eae8,inset_-8px_-8px_16px_#ffffff] relative">
                {/* Auto-scroll indicator */}
                <div className="absolute top-2 right-2 z-10">
                  <div className="flex items-center gap-2 px-3 py-1 bg-white/80 backdrop-blur-sm rounded-full text-xs text-gray-600">
                    <motion.div
                      className="w-2 h-2 bg-[#2ecc71] rounded-full"
                      animate={{ scale: [1, 1.2, 1], opacity: [1, 0.5, 1] }}
                      transition={{ duration: 2, repeat: Infinity }}
                    />
                    Auto-scroll
                  </div>
                </div>
                
                <motion.div 
                  ref={carouselRef}
                  className="flex gap-6 overflow-x-auto scrollbar-hide pb-2"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ duration: 0.6 }}
                  style={{
                    scrollSnapType: 'x mandatory',
                    scrollBehavior: 'smooth'
                  }}
                  onMouseEnter={() => {
                    // Pause auto-scroll on hover
                    if (carouselRef.current) {
                      carouselRef.current.style.scrollBehavior = 'auto';
                    }
                  }}
                  onMouseLeave={() => {
                    // Resume auto-scroll when not hovering
                    if (carouselRef.current) {
                      carouselRef.current.style.scrollBehavior = 'smooth';
                    }
                  }}
                >
                  {featuredProducts.slice(0, 5).map((product, index) => (
                    <motion.div
                      key={product._id}
                      initial={{ opacity: 0, x: 100, scale: 0.9 }}
                      animate={{ opacity: 1, x: 0, scale: 1 }}
                      transition={{ 
                        delay: index * 0.15, 
                        duration: 0.7,
                        type: "spring",
                        stiffness: 100,
                        damping: 15
                      }}
                      whileHover={{ 
                        scale: 1.05, 
                        y: -10,
                        transition: { duration: 0.3, ease: "easeOut" }
                      }}
                      className="min-w-[300px] bg-white rounded-3xl p-6 shadow-[8px_8px_16px_#e8eae8,-8px_-8px_16px_#ffffff] hover:shadow-[12px_12px_24px_#e8eae8,-12px_-12px_24px_#ffffff] transition-all duration-500 group relative flex-shrink-0"
                      style={{ scrollSnapAlign: 'center' }}
                    >
                      {/* Wishlist indicator - always visible if wishlisted */}
                      {isInWishlist(product._id) && (
                        <motion.div 
                          initial={{ scale: 0, rotate: -180 }}
                          animate={{ scale: 1, rotate: 0 }}
                          transition={{ delay: index * 0.15 + 0.3, duration: 0.5 }}
                          className="absolute top-3 left-3 z-10"
                        >
                          <div className="p-2 bg-gradient-to-r from-red-500 to-pink-500 text-white rounded-xl shadow-lg">
                            <FiHeart className="w-4 h-4 fill-current" />
                          </div>
                        </motion.div>
                      )}
                      
                      <div className="relative mb-4">
                        <div className="w-full h-48 bg-gradient-to-br from-[#f8faf8] to-[#eef2ee] rounded-2xl shadow-inner overflow-hidden relative">
                          <motion.img
                            src={product.images?.[0] || product.image || '/placeholder.png'}
                            alt={product.name}
                            className="w-full h-full object-cover"
                            whileHover={{ scale: 1.1 }}
                            transition={{ duration: 0.6, ease: "easeInOut" }}
                          />
                          
                          {/* Gradient overlay for elegance */}
                          <div className="absolute inset-0 bg-gradient-to-t from-black/10 to-transparent opacity-0 group-hover:opacity-100 transition-opacity duration-300"></div>
                        </div>
                        
                        {/* Action buttons with smooth reveal */}
                        <motion.div 
                          className="absolute top-3 right-3 flex gap-2"
                          initial={{ opacity: 0, scale: 0.8, y: -10 }}
                          whileInView={{ opacity: 1, scale: 1, y: 0 }}
                          transition={{ delay: index * 0.15 + 0.5, duration: 0.4 }}
                        >
                          <motion.button
                            onClick={() => addToWishlist(product._id)}
                            className={`p-2 rounded-xl backdrop-blur-sm transition-all duration-300 ${
                              isInWishlist(product._id) 
                                ? 'bg-red-500 text-white shadow-[0_4px_12px_rgba(239,68,68,0.4)]' 
                                : 'bg-white/90 hover:bg-red-50 hover:text-red-500 shadow-[4px_4px_8px_rgba(232,234,232,0.6),-4px_-4px_8px_rgba(255,255,255,0.8)]'
                            }`}
                            whileHover={{ scale: 1.1, rotate: 10 }}
                            whileTap={{ scale: 0.95 }}
                          >
                            <FiHeart className={`w-4 h-4 ${isInWishlist(product._id) ? 'fill-current' : ''}`} />
                          </motion.button>
                          
                          <motion.button
                            onClick={() => navigate(`/products/${product._id}`)}
                            className="p-2 bg-white/90 rounded-xl backdrop-blur-sm hover:bg-blue-50 hover:text-blue-500 transition-all duration-300 shadow-[4px_4px_8px_rgba(232,234,232,0.6),-4px_-4px_8px_rgba(255,255,255,0.8)]"
                            whileHover={{ scale: 1.1, rotate: -10 }}
                            whileTap={{ scale: 0.95 }}
                          >
                            <FiEye className="w-4 h-4" />
                          </motion.button>
                        </motion.div>
                      </div>
                      
                      <div className="space-y-3">
                        <motion.h3 
                          className="font-semibold text-gray-800 line-clamp-2 group-hover:text-[#2ecc71] transition-colors duration-300"
                          initial={{ opacity: 0, y: 10 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: index * 0.15 + 0.6, duration: 0.4 }}
                        >
                          {product.name}
                        </motion.h3>
                        
                        <motion.div 
                          className="flex items-center justify-between"
                          initial={{ opacity: 0, y: 10 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: index * 0.15 + 0.7, duration: 0.4 }}
                        >
                          <span className="text-[#2ecc71] font-bold text-lg bg-gradient-to-r from-[#2ecc71] to-[#27ae60] bg-clip-text text-transparent">
                            â‚¹{product.price.toLocaleString()}
                          </span>
                          <div className="flex items-center gap-1">
                            <FiStar className="w-4 h-4 text-yellow-400 fill-current" />
                            <span className="text-sm text-gray-600">4.5</span>
                          </div>
                        </motion.div>
                        
                        <motion.button
                          onClick={() => addToCart(product._id)}
                          className="w-full py-3 bg-gradient-to-r from-[#2ecc71] to-[#27ae60] text-white rounded-xl font-medium shadow-[0_4px_12px_rgba(46,204,113,0.3)] hover:shadow-[0_8px_20px_rgba(46,204,113,0.4)] hover:from-[#27ae60] hover:to-[#229954] transition-all duration-300 flex items-center justify-center gap-2 group/btn"
                          initial={{ opacity: 0, y: 15 }}
                          animate={{ opacity: 1, y: 0 }}
                          transition={{ delay: index * 0.15 + 0.8, duration: 0.4 }}
                          whileHover={{ scale: 1.02 }}
                          whileTap={{ scale: 0.98 }}
                        >
                          <motion.div
                            className="flex items-center gap-2"
                            whileHover={{ x: 2 }}
                            transition={{ duration: 0.2 }}
                          >
                            <FiShoppingCart className="w-4 h-4 group-hover/btn:rotate-12 transition-transform duration-300" />
                            Add to Cart
                          </motion.div>
                        </motion.button>
                      </div>
                    </motion.div>
                  ))}
                </motion.div>
                  {/* Scroll indicators */}
                <motion.div 
                  className="flex justify-center mt-6 gap-2"
                  initial={{ opacity: 0 }}
                  animate={{ opacity: 1 }}
                  transition={{ delay: 1, duration: 0.5 }}
                >
                  {featuredProducts.slice(0, 5).map((_, index) => (
                    <motion.button
                      key={index}
                      onClick={() => {
                        setCurrentSlide(index);
                        if (carouselRef.current) {
                          const cardWidth = 300 + 24;
                          carouselRef.current.scrollTo({
                            left: index * cardWidth,
                            behavior: 'smooth'
                          });
                        }
                      }}
                      className={`relative overflow-hidden rounded-full transition-all duration-300 ${
                        index === currentSlide 
                          ? 'w-8 h-2 bg-[#2ecc71]' 
                          : 'w-2 h-2 bg-[#2ecc71]/30 hover:bg-[#2ecc71]/50'
                      }`}
                      initial={{ scale: 0 }}
                      animate={{ scale: 1 }}
                      transition={{ delay: 1 + index * 0.1, duration: 0.3 }}
                      whileHover={{ scale: 1.2 }}
                      whileTap={{ scale: 0.9 }}
                    >
                      {index === currentSlide && (
                        <motion.div
                          className="absolute inset-0 bg-gradient-to-r from-[#2ecc71] to-[#27ae60]"
                          layoutId="activeIndicator"
                          transition={{ type: "spring", stiffness: 300, damping: 30 }}
                        />
                      )}
                    </motion.button>
                  ))}
                </motion.div>
              </div>
              
              {/* Subtle scroll hint */}
              <motion.div
                className="text-center mt-4"
                initial={{ opacity: 0 }}
                animate={{ opacity: 1 }}
                transition={{ delay: 1.5, duration: 0.5 }}
              >
                <p className="text-sm text-gray-500 flex items-center justify-center gap-2">
                  <FiArrowRight className="w-4 h-4" />
                  Scroll horizontally to see more
                  <FiArrowRight className="w-4 h-4" />
                </p>
              </motion.div>
            </div>
          ) : (
            <motion.div
              initial={{ opacity: 0, scale: 0.9 }}
              animate={{ opacity: 1, scale: 1 }}
              transition={{ duration: 0.5 }}
              className="text-center py-12"
            >
              <div className="bg-white rounded-3xl p-8 shadow-[8px_8px_16px_#e8eae8,-8px_-8px_16px_#ffffff] max-w-md mx-auto">
                <FiShoppingBag className="w-16 h-16 text-gray-300 mx-auto mb-4" />
                <h3 className="text-xl font-semibold text-gray-600 mb-2">No Products Found</h3>                <p className="text-gray-500">We're working on adding amazing products for you!</p>              </div>
            </motion.div>
          )}        </div>
      </motion.section>

      {/* New Arrivals */}
      <motion.section 
        className="py-16 px-4 bg-gradient-to-br from-[#f8faf8] to-white"
        style={{
          y: useTransform(scrollYProgress, [0.4, 0.6], [0, -15]),
          scale: useTransform(scrollYProgress, [0.4, 0.6], [1, 1.02]),
        }}
      >
        <div className="max-w-7xl mx-auto">
          <SectionHeader
            title="New Arrivals"
            subtitle="Fresh products just added to our collection"
            icon={FiTrendingUp}
          />
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">            {newArrivals.length > 0 ? (
              newArrivals.map((product, index) => (
                <ProductCard 
                  key={product._id} 
                  product={product} 
                  index={index}
                  onAddToWishlist={addToWishlist}
                  onAddToCart={addToCart}
                  isInWishlist={isInWishlist}
                  navigate={navigate}
                />
              ))
            ) : (
              <div className="col-span-full text-center py-8">
                <div className="bg-white rounded-3xl p-6 shadow-[8px_8px_16px_#e8eae8,-8px_-8px_16px_#ffffff] max-w-sm mx-auto">
                  <FiTrendingUp className="w-12 h-12 text-gray-300 mx-auto mb-3" />
                  <p className="text-gray-500">New arrivals coming soon!</p>
                </div>
              </div>            )}
          </div>
        </div>
      </motion.section>

      {/* Top Rated */}
      <motion.section 
        className="py-16 px-4"
        style={{
          y: useTransform(scrollYProgress, [0.6, 0.8], [0, -10]),
        }}
      >
        <div className="max-w-7xl mx-auto">
          <SectionHeader
            title="Top Rated"
            subtitle="Products with the highest customer ratings"
            icon={FiAward}
          />
            <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8">            {topRated.length > 0 ? (
              topRated.map((product, index) => (
                <ProductCard 
                  key={product._id} 
                  product={product} 
                  index={index}
                  onAddToWishlist={addToWishlist}
                  onAddToCart={addToCart}
                  isInWishlist={isInWishlist}
                  navigate={navigate}
                />
              ))
            ) : (
              <div className="col-span-full text-center py-8">
                <div className="bg-white rounded-3xl p-6 shadow-[8px_8px_16px_#e8eae8,-8px_-8px_16px_#ffffff] max-w-sm mx-auto">
                  <FiAward className="w-12 h-12 text-gray-300 mx-auto mb-3" />
                  <p className="text-gray-500">Top rated products coming soon!</p>
                </div>
              </div>
            )}          </div>
        </div>
      </motion.section>

      {/* CTA Section */}
      <motion.section 
        className="py-20 px-4"
        style={{
          y: useTransform(scrollYProgress, [0.8, 1], [0, -5]),
          scale: useTransform(scrollYProgress, [0.8, 1], [1, 1.05]),
        }}
      >
        <div className="max-w-4xl mx-auto">
          <motion.div
            initial={{ opacity: 0, y: 30 }}
            whileInView={{ opacity: 1, y: 0 }}
            viewport={{ once: true }}
            className="bg-white rounded-3xl p-12 shadow-[8px_8px_16px_#e8eae8,-8px_-8px_16px_#ffffff] text-center"
          >
            <h2 className="text-4xl font-bold text-gray-800 mb-6">
              Ready to Start Shopping?
            </h2>
            <p className="text-gray-600 mb-8 text-lg">
              Join thousands of satisfied customers and discover amazing deals on quality products.
            </p>            <motion.button
              whileHover={{ scale: 1.05 }}
              whileTap={{ scale: 0.95 }}
              onClick={() => navigate('/products')}
              className="px-12 py-4 bg-[#2ecc71] text-white rounded-2xl font-semibold shadow-[0_8px_24px_rgba(46,204,113,0.2)] hover:shadow-[0_12px_32px_rgba(46,204,113,0.3)] transition-all inline-flex items-center gap-3"
            >
              <FiShoppingBag className="w-5 h-5" />
              Explore All Products
              <FiArrowRight className="w-5 h-5" />
            </motion.button>
          </motion.div>
        </div>
      </motion.section>
    </motion.div>
  );
};

export default Home;
